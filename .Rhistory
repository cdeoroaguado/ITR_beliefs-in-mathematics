# packages -----
library(tidyverse)
library(readxl)
library(nortest)
library(effectsize)
library(car)
# Data reading ----
datos_pais <- read_excel("GitHub/ITR_beliefs-in-mathematics/Datos_TEDS_M_Colombia.xlsx",
sheet = "bd_Norm_Licen")
library(readxl)
# Data reading ----
datos_pais <- read_excel("GitHub/ITR_beliefs-in-mathematics/Datos_TEDS_M_Colombia.xlsx",
sheet = "bd_Norm_Licen")
library(readxl)
Datos_TEDS_M_Colombia <- read_excel("Datos_TEDS_M_Colombia.xlsx",
sheet = "bd_Norm_Licen")
View(Datos_TEDS_M_Colombia)
# Data reading ----
datos_pais <- read_excel("Datos_TEDS_M_Colombia.xlsx",
sheet = "bd_Norm_Licen")
dic_creencias <- read_excel("",
sheet = "dic")
dic_creencias <- read_excel("Datos_TEDS_M_Colombia.xlsx",
sheet = "dic")
# subset data ----
datos_pais %>%
filter(PROGRAMA=="Normalista") -> datos_normalista
datos_pais %>%
filter(PROGRAMA=="Licenciado") -> datos_licenciado
# transformaciones de datos ----
dic_creencias %>%
filter(subdominio == "Rules and Procedures") %>%
dplyr::select(idi) %>%
pull(idi) %>%
as.character()
creencias <- datos_pais %>%
dplyr::select(PROGRAMA,MFD001A,MFD001B,MFD001E,MFD001G,MFD001K,MFD001L,
MFD001C,MFD001D,MFD001F,MFD001H,MFD001I,MFD001J,
MFD002A,MFD002B,MFD002C,MFD002D,MFD002E,MFD002F,MFD002I,
MFD002J,MFD002G,MFD002H,MFD002K,MFD002L,MFD002M,MFD002N,
MFD003A,MFD003B,MFD003C,MFD003D,MFD003E,MFD003F,MFD003G,
MFD003H,MFD004A,MFD004B,MFD004C,MFD004D,MFD004E,MFD004F,MFD004G,
MFD004H,MFD004I,MFD004J,MFD004K,MFD004L,MFD004M,
MFD005A,MFD005B,MFD005C,MFD005D,MFD005E,MFD005F) %>%
mutate(Rules_and_Procedures = ((MFD001A+MFD001B+MFD001E
+MFD001G+MFD001K+MFD001L)/6),
Process_of_Inquiry = ((MFD001C+MFD001D+MFD001F+
MFD001H+MFD001I+MFD001J)/6),
Teacher_Direction = ((MFD002A+MFD002B+MFD002C+MFD002D+MFD002E+
MFD002F+MFD002I+MFD002J)/8),
Active_Learning = ((MFD002G+MFD002H+MFD002K+MFD002L+MFD002M+MFD002N)/6),
Fixed_Ability = ((MFD003A+MFD003B+MFD003C+MFD003D+MFD003E+MFD003F+MFD003G+
MFD003H)/8),
Preparedness_for_Tea_Mat = ((MFD004A+MFD004B+MFD004C+MFD004D+MFD004E+MFD004F+MFD004G+
MFD004H+MFD004I+MFD004J+MFD004K+MFD004L+MFD004M)/13),
Quality_of_Instruction = ((MFD005A+MFD005B+MFD005C+MFD005D+MFD005E+MFD005F)/6))
# subset data ----
creencias %>%
filter(PROGRAMA=="Normalista") -> c_normalista
creencias %>%
filter(PROGRAMA=="Licenciado") -> c_licenciado
# Rules_and_Procedures total ----
creencias %>%
summarise(n = length(Rules_and_Procedures),
media= mean(Rules_and_Procedures),
sd = sd(Rules_and_Procedures),
median = median(Rules_and_Procedures),
min = min(Rules_and_Procedures),
max = max(Rules_and_Procedures),
riq = IQR(Rules_and_Procedures))
creencias %>%
group_by(PROGRAMA) %>%
summarise(n = length(Rules_and_Procedures),
media= mean(Rules_and_Procedures),
sd = sd(Rules_and_Procedures),
median = median(Rules_and_Procedures),
min = min(Rules_and_Procedures),
max = max(Rules_and_Procedures),
riq = IQR(Rules_and_Procedures))
# non-parametric test
wilcox.test(c_normalista$Rules_and_Procedures,
c_licenciado$Rules_and_Procedures,paired = F,
exact = F,correct = T,conf.int = 0.95)
# effect size non-parametric
r1A <- rank_biserial(c_normalista$Rules_and_Procedures,
c_licenciado$Rules_and_Procedures)
r1A
# Process of Inquiry total ----
creencias %>%
summarise(n = length(Process_of_Inquiry),
media= mean(Process_of_Inquiry),
sd = sd(Process_of_Inquiry),
median = median(Process_of_Inquiry),
min = min(Process_of_Inquiry),
max = max(Process_of_Inquiry),
riq = IQR(Process_of_Inquiry))
creencias %>%
group_by(PROGRAMA) %>%
summarise(n = length(Process_of_Inquiry),
media= mean(Process_of_Inquiry),
sd = sd(Process_of_Inquiry),
median = median(Process_of_Inquiry),
min = min(Process_of_Inquiry),
max = max(Process_of_Inquiry),
riq = IQR(Process_of_Inquiry))
# non-parametric test
wilcox.test(c_normalista$Process_of_Inquiry,
c_licenciado$Process_of_Inquiry,paired = F,
exact = F,correct = T,conf.int = 0.95)
# effect size non-parametric
r1A <- rank_biserial(c_normalista$Process_of_Inquiry,
c_licenciado$Process_of_Inquiry)
r1A
# Teacher Direction total ----
creencias %>%
summarise(n = length(Teacher_Direction),
media= mean(Teacher_Direction),
sd = sd(Teacher_Direction),
median = median(Teacher_Direction),
min = min(Teacher_Direction),
max = max(Teacher_Direction),
riq = IQR(Teacher_Direction))
creencias %>%
group_by(PROGRAMA) %>%
summarise(n = length(Teacher_Direction),
media= mean(Teacher_Direction),
sd = sd(Teacher_Direction),
median = median(Teacher_Direction),
min = min(Teacher_Direction),
max = max(Teacher_Direction),
riq = IQR(Teacher_Direction))
# non-parametric test
wilcox.test(c_normalista$Teacher_Direction,
c_licenciado$Teacher_Direction,paired = F,
exact = F,correct = T,conf.int = 0.95)
# effect size non-parametric
r1A <- rank_biserial(c_normalista$Teacher_Direction,
c_licenciado$Teacher_Direction)
r1A
# Active Learning total ----
creencias %>%
summarise(n = length(Active_Learning),
media= mean(Active_Learning),
sd = sd(Active_Learning),
median = median(Active_Learning),
min = min(Active_Learning),
max = max(Active_Learning),
riq = IQR(Active_Learning))
creencias %>%
group_by(PROGRAMA) %>%
summarise(n = length(Active_Learning),
media= mean(Active_Learning),
sd = sd(Active_Learning),
median = median(Active_Learning),
min = min(Active_Learning),
max = max(Active_Learning),
riq = IQR(Active_Learning))
# non-parametric test
wilcox.test(c_normalista$Active_Learning,
c_licenciado$Active_Learning,paired = F,
exact = F,correct = T,conf.int = 0.95)
# effect size non-parametric
r1A <- rank_biserial(c_normalista$Active_Learning,
c_licenciado$Active_Learning)
r1A
# Active Learning total ----
creencias %>%
summarise(n = length(Active_Learning),
media= mean(Active_Learning),
sd = sd(Active_Learning),
median = median(Active_Learning),
min = min(Active_Learning),
max = max(Active_Learning),
riq = IQR(Active_Learning))
creencias %>%
group_by(PROGRAMA) %>%
summarise(n = length(Active_Learning),
media= mean(Active_Learning),
sd = sd(Active_Learning),
median = median(Active_Learning),
min = min(Active_Learning),
max = max(Active_Learning),
riq = IQR(Active_Learning))
# Fixed Ability total ----
creencias %>%
summarise(n = length(Fixed_Ability),
media= mean(Fixed_Ability),
sd = sd(Fixed_Ability),
median = median(Fixed_Ability),
min = min(Fixed_Ability),
max = max(Fixed_Ability),
riq = IQR(Fixed_Ability))
creencias %>%
group_by(PROGRAMA) %>%
summarise(n = length(Fixed_Ability),
media= mean(Fixed_Ability),
sd = sd(Fixed_Ability),
median = median(Fixed_Ability),
min = min(Fixed_Ability),
max = max(Fixed_Ability),
riq = IQR(Fixed_Ability))
# non-parametric test
wilcox.test(c_normalista$Fixed_Ability,
c_licenciado$Fixed_Ability,paired = F,
exact = F,correct = T,conf.int = 0.95)
# effect size non-parametric
r1A <- rank_biserial(c_normalista$Fixed_Ability,
c_licenciado$Fixed_Ability)
r1A
creencias %>%
group_by(PROGRAMA) %>%
summarise(n = length(Quality_of_Instruction),
media= mean(Quality_of_Instruction),
sd = sd(Quality_of_Instruction),
median = median(Quality_of_Instruction),
min = min(Quality_of_Instruction),
max = max(Quality_of_Instruction),
riq = IQR(Quality_of_Instruction))
# non-parametric test
wilcox.test(c_normalista$Quality_of_Instruction,
c_licenciado$Quality_of_Instruction,paired = F,
exact = F,correct = T,conf.int = 0.95)
# effect size non-parametric
r1A <- rank_biserial(c_normalista$Quality_of_Instruction,
c_licenciado$Quality_of_Instruction)
r1A
creencias %>%
group_by(PROGRAMA) %>%
summarise(n = length(Preparedness_for_Tea_Mat),
media= mean(Preparedness_for_Tea_Mat),
sd = sd(Preparedness_for_Tea_Mat),
median = median(Preparedness_for_Tea_Mat),
min = min(Preparedness_for_Tea_Mat),
max = max(Preparedness_for_Tea_Mat),
riq = IQR(Preparedness_for_Tea_Mat))
# non-parametric test
wilcox.test(c_normalista$Preparedness_for_Tea_Mat,
c_licenciado$Preparedness_for_Tea_Mat,paired = F,
exact = F,correct = T,conf.int = 0.95)
# effect size non-parametric
r1A <- rank_biserial(c_normalista$Preparedness_for_Tea_Mat,
c_licenciado$Preparedness_for_Tea_Mat)
r1A
# non-parametric test
wilcox.test(c_normalista$Preparedness_for_Tea_Mat,
c_licenciado$Preparedness_for_Tea_Mat,paired = F,
exact = F,correct = T,conf.int = 0.95)
